plugins {
    id "groovy"
    id "maven-publish"
    id "com.gradle.plugin-publish" version "1.2.1"
    id 'java-gradle-plugin'
}

processResources.duplicatesStrategy = DuplicatesStrategy.INCLUDE

evaluationDependsOn ':gaffer-report'

jar.dependsOn ':gaffer-report:bundle'

jar {
    into('report') {
        from project(':gaffer-report').bundle.outputs.files
    }
}

tasks.named('test', Test) {
    useJUnitPlatform()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    testImplementation 'junit:junit:4.+'
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

publishing {
    repositories {
        maven {
            url = uri(System.properties['user.home']+'/.localmavenrepo/')
        }
    }
}

gradlePlugin {
  website = 'https://github.com/oss-ethinking/gradle-gaffer-plugin'
  vcsUrl = 'https://github.com/oss-ethinking/gradle-gaffer-plugin'
  plugins {
    create("gafferPlugin") {
      id = 'de.ethinking.gaffer'
      implementationClass = 'de.ethinking.gradle.plugin.GafferBasePlugin'
      displayName = 'Gradle Gaffer plugin'
      description = 'The Gradle Gaffer plugin provides a DSL for preparing complex deployment tasks. It works like the distribution plugin but with a different use case.'
//      tags.set(listOf('gaffer','assemble','DevOps'))
    }
  }
}

